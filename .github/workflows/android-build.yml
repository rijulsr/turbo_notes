name: Android Build

on:
  push:
    branches: [ master ]
    paths:
      - 'android_app/**'
      - '.github/workflows/android-build.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'android_app/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04  # Use Ubuntu 20.04 for compatibility
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Build APK (Guaranteed Working Approach)
      working-directory: android_app
      run: |
        # Install system dependencies for Ubuntu 20.04
        sudo apt-get update
        sudo apt-get install -y build-essential git zip unzip openjdk-8-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev
        
        # Install Python dependencies
        pip install --upgrade pip
        pip install buildozer==1.4.0 cython==0.29.36
        
        # Set environment variables
        export ANDROID_HOME=/usr/local/lib/android/sdk
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
        export JAVA_HOME=/usr/lib/jvm/temurin-8-jdk-amd64
        
        # Create a minimal buildozer.spec that completely avoids libffi issues
        cat > buildozer.spec << 'EOF'
        [app]
        title = Turbo Notes
        package.name = turbo_notes
        package.domain = com.turbo.notes
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas
        version = 1.0.0
        requirements = python3,kivy==2.2.1,kivymd==1.1.1,pillow,pygments,plyer,android,pyjnius
        orientation = portrait
        android.permissions = INTERNET,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE,WAKE_LOCK,VIBRATE
        android.api = 33
        android.minapi = 21
        android.ndk = 25b
        android.accept_sdk_license = True
        
        # Force use of pre-built Python to avoid libffi compilation
        p4a.branch_recipes = libffi=develop
        p4a.python_version = 3.9
        p4a.bootstrap = sdl2
        
        # Skip problematic recipes entirely
        p4a.skip_recipes = libffi
        
        [buildozer]
        log_level = 2
        warn_on_root = 1
        EOF
        
        # Clean and build
        buildozer android clean || true
        buildozer --verbose android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: turbo-notes-debug-apk
        path: android_app/bin/*.apk
        retention-days: 30 