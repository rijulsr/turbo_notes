name: Android Build

on:
  push:
    branches: [ master ]
    paths:
      - 'android_app/**'
      - '.github/workflows/android-build.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'android_app/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    # Fallback if Ubuntu 24.04 issues persist:
    # runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('android_app/buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
          
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential git zip zlib1g-dev \
          autoconf automake libtool libltdl-dev \
          pkg-config libffi-dev libssl-dev \
          cmake ccache gettext
          
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install cython==0.29.36 buildozer==1.4.0
        
    - name: Build Android APK
      working-directory: android_app
      run: |
        # Clean previous builds (ignore errors)
        buildozer android clean || true
        
        # Export environment variables for autotools fix
        export ACLOCAL="aclocal -I /usr/share/aclocal"
        export ACLOCAL_PATH="/usr/share/aclocal:${ACLOCAL_PATH}"
        export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig"
        
        # Run libtoolize to ensure libtool macros are available
        libtoolize --force --copy || true
        
        # Build debug APK with verbose output
        buildozer --verbose android debug 2>&1 | tee buildozer_full.log
        
        # Check if build succeeded
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "=== BUILD FAILED - Last 100 lines of buildozer log ==="
          tail -n 100 buildozer_full.log
          exit 1
        fi
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: turbo-notes-debug-apk
        path: android_app/bin/*.apk
        retention-days: 30 