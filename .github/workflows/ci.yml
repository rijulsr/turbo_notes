name: 🚀 Turbo Notes CI/CD

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly health check

jobs:
  # ==================== CODE QUALITY ====================
  code-quality:
    name: 🔍 Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort pylint bandit safety
        pip install -r requirements.txt
        
    - name: 🎯 Code Formatting Check (Black)
      run: |
        black --check --diff turbo_notes.py setup.py
        
    - name: 📏 Import Sorting Check (isort)
      run: |
        isort --check-only --diff turbo_notes.py setup.py
        
    - name: 🔎 Lint with flake8
      run: |
        flake8 turbo_notes.py setup.py --max-line-length=100 --ignore=E203,W503
        
    - name: 🔒 Security Check (Bandit)
      run: |
        bandit -r turbo_notes.py
        
    - name: 🛡️ Vulnerability Check (Safety)
      run: |
        # Install older version of safety that works well in CI
        pip install safety==2.3.5
        
        # Check our core dependencies for vulnerabilities
        safety check -r requirements.txt --ignore 70612
        
    - name: 📊 Code Quality (Pylint)
      run: |
        pylint turbo_notes.py --disable=C0103,R0903 --exit-zero
      continue-on-error: true

  # ==================== TERMINAL APP TESTS ====================
  test-terminal:
    name: 🖥️ Test Terminal App
    needs: code-quality
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
        
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock
        
    - name: 🧪 Run Terminal App Tests
      run: |
        python -m pytest tests/ -v --cov=turbo_notes --cov-report=xml
        
    - name: ✅ Basic Functionality Test
      run: |
        python -c "
        import sys, os
        sys.path.append('.')
        from turbo_notes import TurboNotes
        print('[PASS] Terminal app imports successfully')
        app = TurboNotes()
        app.add_note('Test Note', 'This is a test note')
        app.add_task('Test Task', 'This is a test task')
        print('[PASS] Basic functionality works')
        "
        
    - name: 📊 Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: terminal-app
        name: terminal-app-coverage

  # ==================== SECURITY SCAN ====================
  security-scan:
    name: 🔒 Security & Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: 🔒 Run Bandit Security Scan
      run: |
        pip install bandit
        bandit -r turbo_notes.py -f json -o bandit-report.json
        
    - name: 🛡️ Run Safety Check
      run: |
        pip install safety==2.3.5
        safety check -r requirements.txt --json --output safety-report.json
        
    - name: 📊 Upload Security Reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
        retention-days: 30

  # ==================== DEPLOYMENT READY ====================
  deployment-check:
    name: 🚀 Deployment Readiness Check
    needs: [test-terminal, security-scan]
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: ✅ Final Integration Test
      run: |
        echo "🚀 Running final integration test..."
        python -c "
        import sys, tempfile, os
        sys.path.append('.')
        from turbo_notes import TurboNotes
        
        # Test complete workflow
        app = TurboNotes()
        
        # Add test data
        app.add_note('Integration Test Note', 'This is an integration test')
        app.add_task('Integration Test Task', 'This is an integration test task')
        
        # Verify data persistence
        notes = app.get_notes()
        tasks = app.get_tasks()
        
        assert len(notes) > 0, 'Notes should be saved'
        assert len(tasks) > 0, 'Tasks should be saved'
        
        print('✅ Integration test passed!')
        print(f'📝 Notes count: {len(notes)}')
        print(f'✅ Tasks count: {len(tasks)}')
        "
        
    - name: 🎯 Status Report
      run: |
        echo "🚀 Turbo Notes - Deployment Ready!"
        echo "✅ All tests passed"
        echo "✅ Security checks completed"
        echo "✅ Code quality validated"
        echo "🎉 Ready for deployment!" 